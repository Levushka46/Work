;====================================================================
; Main.asm file generated by New Project wizard
;
; Created:   ПН апр 26 2021
; Processor: ATmega64
; Compiler:  AVRASM (Proteus)
;====================================================================

;====================================================================
; DEFINITIONS
;====================================================================
.def temp = r16;переменная
.def temp2 = r17 ;переменная 2
.def temp_izm = r18 ; результат измерения
.def temp3 = r19 ;переключатель

.def so = r25 ; старший байт OCR1A
.def mo = r24 ;младший байт OCR1A

.def r_stabil = r23 ; регистр для хранения заданного уровня стабилизации 

.def tt = r22 ; счётчик задержки внешний
.def tt2 = r21 ; счётчик задержки внутренний

.def ul = r1 ; младший байт напряжения 
.def uh = r2 ;старший байт напряжения 
.def ps = r20 ; индекс для индикации результата измерения

.equ dA = 0x01 ; изменение OCR1A при стабилизации
.equ dD = 0x15 ; изменение OCR1A без стабилизации
; начальные значения
.equ ic = 0x70 ; верхнего предела
.equ oa = 0x50 ; длительности по каналу А
.equ ob = 0x30 ; длительности по каналу B
;====================================================================
; VARIABLES
;====================================================================

;====================================================================
; RESET and INTERRUPT VECTORS
;====================================================================

      ; Reset Vector
      rjmp  Start
      

  .org $0100     
tablU: ; таблица напряжений (В,ВВ)
.DW  0x000, 0x002, 0x004, 0x006, 0x008, 0x010, 0x012, 0x014, 0x016, 0x018, 0x020, 0x022, 0x024, 0x025, 0x027, 0x029
.DW  0x031, 0x033, 0x035, 0x037, 0x039, 0x041, 0x043, 0x045, 0x047, 0x049, 0x051, 0x053, 0x055, 0x057, 0x059, 0x061 
.DW  0x063, 0x065, 0x067, 0x069, 0x071, 0x073, 0x075, 0x076, 0x078, 0x080, 0x082, 0x084, 0x086, 0x088, 0x090, 0x092   
.DW  0x094, 0x096, 0x098, 0x100, 0x102, 0x104, 0x106, 0x108, 0x110, 0x112, 0x114, 0x116, 0x118, 0x120, 0x122, 0x124
.DW  0x125, 0x127, 0x129, 0x131, 0x133, 0x135, 0x137, 0x139, 0x141, 0x143, 0x145, 0x147, 0x149, 0x151, 0x153, 0x155
.DW  0x157, 0x159, 0x161, 0x163, 0x165, 0x167, 0x169, 0x171, 0x173, 0x175, 0x176, 0x178, 0x180, 0x182, 0x184, 0x186
.DW  0x188, 0x190, 0x192, 0x194, 0x196, 0x198, 0x200, 0x202, 0x204, 0x206, 0x208, 0x210, 0x212, 0x214, 0x216, 0x218
.DW  0x220, 0x222, 0x224, 0x225, 0x227, 0x229, 0x231, 0x233, 0x235, 0x237, 0x239, 0x241, 0x243, 0x245, 0x247, 0x249

.DW  0x251, 0x253, 0x255, 0x257, 0x259, 0x261, 0x263, 0x265, 0x267, 0x269, 0x271, 0x273, 0x275, 0x276, 0x278, 0x280
.DW  0x282, 0x284, 0x286, 0x288, 0x290, 0x292, 0x294, 0x296, 0x298, 0x300, 0x302, 0x304, 0x306, 0x308, 0x310, 0x312
.DW  0x314, 0x316, 0x318, 0x320, 0x322, 0x324, 0x325, 0x327, 0x329, 0x331, 0x333, 0x335, 0x337, 0x339, 0x341, 0x343
.DW  0x345, 0x347, 0x349, 0x351, 0x353, 0x355, 0x357, 0x359, 0x361, 0x363, 0x365, 0x367, 0x369, 0x371, 0x373, 0x375
.DW  0x376, 0x378, 0x380, 0x382, 0x384, 0x386, 0x388, 0x390, 0x392, 0x394, 0x396, 0x398, 0x400, 0x402, 0x404, 0x406
.DW  0x408, 0x410, 0x412, 0x414, 0x416, 0x418, 0x420, 0x422, 0x424, 0x425, 0x427, 0x429, 0x431, 0x433, 0x435, 0x437
.DW  0x439, 0x441, 0x443, 0x445, 0x447, 0x449, 0x451, 0x453, 0x455, 0x457, 0x459, 0x461, 0x463, 0x465, 0x467, 0x469
.DW  0x471, 0x473, 0x475, 0x476, 0x478, 0x480, 0x482, 0x484, 0x486, 0x488, 0x490, 0x492, 0x494, 0x496, 0x498, 0x500      

;====================================================================
; CODE SEGMENT
;====================================================================

;НАЧАЛО

;задержка
tau:
   ldi tt, 0x1f
lt2:
   ldi tt2, 0xff
lt1:
   nop
   dec tt2
   nop
   brne lt1
   dec tt
   brne lt2
ret

 DECREMENT1a: ;уменьшение значения
  in mo, ocr1al
	 in so, ocr1ah
	 dec mo	    ; обработка "-"
	dec  so	    ; обработка "-"
      dec1a:
	out ocr1ah , so
	out ocr1al,  mo
ret 

 DECREMENT1b: ;уменьшение значения
    in mo, ocr1bl
	 in so, ocr1bh
	 dec mo	    ; обработка "-"
	dec  so	    ; обработка "-"
      dec1b:
	out ocr1bh , so
	out ocr1bl,  mo
ret 


INCREMENT1a: ;увеличение значения
    in mo, ocr1al 
	 in so, ocr1ah
	inc mo	    ; обработка "+"
	inc so	    ; обработка "+"
      inc1a:
	    out ocr1ah, so
	    out ocr1al, mo 
ret

INCREMENT1b: ;увеличение значения
   in mo, ocr1bl 
	 in so, ocr1bh
	inc mo	    ; обработка "+"
	inc so	    ; обработка "+"
      inc1b:
	    out ocr1bh, so
	    out ocr1bl, mo 
ret
;измерение значения
IZMERENIE:
   sbi adcsra, adsc ; запуск измерения
   ldi zh, High(tablU*2)
   ldi zl, Low(tablU*2)
   inc ps ; +1 проход по таблице
i1:
   sbis adcsra, adif ; флаг завершения 

   jmp i1
   sbi adcsra, adif ; сброс флага
   
   in temp, adch ; читаем результат преобразования
   
      mov temp_izm, temp ; сохраняем результат для п/п STABILIZACIA
      lsl temp ; левый сдвиг (*2)
      brcc i2 ; если C = 1, то 
      inc zh
i2:
   add zl, temp ; формируем адрес десятичного напряжения 
   lpm ul, z+ ; читаем из таблицы младший байт
   lpm uh, z ; читаем из таблицы старший байт
   brtc i3 ; если T = 0 (НЕ режим стабилизации ), то выводим на индикацию
   andi ps, 0x0f
   cpi ps, 12
   brne i4
i3:
   out porta, uh ; выводим на индикацию старшия цифру
   out portc, ul;  выводим на индикацию младшие цифры
i4:
ret


;стабилизация
STABILIZACIA:
   ldi r_stabil, 0x66 ; задаём стабилизацию константой: 0x66 = 2,00 B
so4:
   sbis pind, 3
   jmp so4 ; ждём отпускание К4
s1:
   call tau
   call IZMERENIE 
   sub temp_izm, r_stabil ; сравниваем текущие с константой
   breq s2
   brcs s3
   call DECREMENT1a
   jmp s2
s3:
   call INCREMENT1a
s2:
   sbic pind, 3 ; проверка нажатия К4
   jmp s1 ; возврат если К4 НЕ нажата
   clt ; сброс флага Т
ret

Ua:
;Операции с АЦП
sbi porte, 0 ; зажигаем светодиод
ldi temp , 0x67 ; 01 1 00111  67-измерение по каналу А, 01 1 00110 66- измерение по каналу А
out admux, temp ; ИОН = AVcc 01 ; левосторонний результат 1 , вход ADC* от канала
ret

Ub: 
;Операции с АЦП
sbi porte, 1 ; зажигаем светодиод
ldi temp , 0x66 ; 01 1 00111  67-измерение по каналу А, 01 1 00110 66- измерение по каналу B
out admux, temp ; ИОН = AVcc 01 ; левосторонний результат 1 , вход ADC* от канала
ret

Start:
;настройка портов
clr temp
sts ddrf, temp ; F - вход
out ddrd, temp ; D - вход
ldi temp, 0xff
out portd, temp ;подключаем регистры D
out ddrb, temp ; B - выход
out ddrc, temp ; C - выход
out ddra, temp ; A - выход
out ddre, temp ; E - выход

; Операции с таймером T1 в режиме ШИМ
ldi temp,ic
   out icr1h,temp 
   out icr1l,temp 
; загружаем регистры сравнения OCR1-A
   ldi temp,oa
   out ocr1ah,temp   
   out ocr1al,temp 
   ; загружаем регистры сравнения OCR1-B
   ldi temp,ob
   out ocr1bh,temp   
   out ocr1bl,temp 

sbi porte, 0 ; зажигаем светодиод
ldi temp3, 0x00 ; обнуляем переходный счетчик

ldi temp, 0xA2 ;  (10 10 00 10) на выходах OC1-AB-- сброс при совпадении
out tccr1a, temp ; сброс при совпадении

ldi temp, 0x11; режим 10: ШИМ фк, ICR1 - верхний предел  
out tccr1b, temp ; предделитель 1/1 000 10 001
; таймер запущен

;Операции с АЦП
ldi temp , 0x67 ; 01 1 00111
out admux, temp ; ИОН = AVcc 01 ; левосторонний результат 1 , вход ADC7 - 0111

ldi temp,0x81 ; 1 0 0 0 0 001-по совпадению Т0
out adcsra, temp ; вкл,	не запущен, одиночное измерение IF, прерывания запущены; коэфф. деления = 1

clt ; сброс флага Т
cbi portb, 0 ; выкл светодиод
;основной цикл
k:
in temp2,icr1l
   in temp2,icr1h ; постоянно читаем предел
   sbis pind, 0 ; проверка нажатия K1
   jmp k1
   sbis pind, 1 ; проверка нажатия K2
   jmp k2
   sbis pind, 2 ; проверка нажатия К3
   jmp k3
   sbis pind, 3 ; проверка нажатия К4
   jmp k4
   sbis pind, 4 ; проверка нажатия К5
    jmp k5
    sbis pind, 5 ; проверка нажатия К6
    jmp k6
    sbis pind, 6 ; проверка нажатия К7
    jmp k7
   jmp k
k5:
   cbi porte, 0 ; гасим светодиод
   cbi porte, 1 ; гасим светодиод
   inc temp3
    cpi temp3,0
    breq prigA
    cpi temp3,1
    breq prigB
    cpi temp3,2
    breq obn
jmp ko  
k4:
   set ; установка флага T
   sbi portb, 0 ; зажигаем светодиод
   call STABILIZACIA ; включаем стабилизацию
   jmp ko ;
k3:
   call IZMERENIE ; вызов АЦП измерение текущего состояния
   jmp ko
k2:
cpi temp3,0
    breq decremAkan
cpi temp3,1
    breq decremBkan
 jmp ko 
ko:
   in temp, pind ; ожидание отпускания
   com temp 
   breq k
   jmp ko 
k1:
cpi temp3,0
    breq incrAkan
cpi temp3,1
    breq incrBkan
     incrAkan:
   call INCREMENT1a; увеличиваем OCR1A 
   jmp ko 
incrBkan:
   call INCREMENT1b; увеличиваем OCR1b 
   jmp ko  
jmp ko
decremAkan:
   call DECREMENT1a ; уменьшаем OCR1A
   jmp ko
decremBkan:
   call DECREMENT1b ; уменьшаем OCR1b
   jmp ko
obn:
    call Ua
    dec temp3
    dec temp3
     jmp ko
prigA:
    call Ua
     jmp ko
prigB:
    call Ub
     jmp ko
k6:
   inc temp2   	; увеличим icr на 0x0101
   out icr1h,temp2 
   out icr1l,temp2     
jmp ko   
k7:
   dec temp2   	; уменьшаем icr на 0x0101
   out icr1h,temp2 
   out icr1l,temp2     
jmp ko 